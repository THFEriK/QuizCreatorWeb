@page "/admin/users/edit/{UserId:int}"
@using QuizCreatorWeb.Data
@using QuizCreatorWeb.Data.Dto
@inject UserService UserService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h3>Edit User</h3>

@if (user == null)
{
    <p>Loading...</p>
}
else
{
        <EditForm Model="user" OnValidSubmit="SaveUser">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="username">Username</label>
                <InputText id="username" class="form-control" @bind-Value="user.UserName" />
            </div>

            <div class="form-group">
                <label for="email">Email</label>
            <InputText id="email" class="form-control" @bind-Value="user.Email" readonly />
            </div>

            <div class="form-group">
                <label for="isAdmin">Admin</label>
                <InputCheckbox id="isAdmin" class="form-check-input" @bind-Value="user.IsAdmin" />
            </div>

            <button type="submit" class="btn btn-primary">Save</button>
            <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
        </EditForm>
}

@code {
    [Parameter]
    public int UserId { get; set; }

    private UserDto? user;

    protected override async Task OnInitializedAsync()
    {
        user = await UserService.GetUser(UserId);
    }

    private async Task SaveUser()
    {
        await UserService.UpdateUser(user);
        NavigationManager.NavigateTo("/admin/users");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/admin/users");
    }
}